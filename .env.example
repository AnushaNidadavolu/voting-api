# Remove PORT in Heroku
PORT=3000

# Heroku: "production"
RACK_ENV=development
RAILS_ENV=development

# Heroku: "true"
FORCE_SSL="false"

# Without LANG voting-frontend displays local files with messed up encoding
LANG=en_US.UTF-8

# Generate secrets with `rake secret`
JWT_VOTER_SECRET=long_jwt_key

# This MUST differ from JWT_VOTER_SECRET
JWT_SERVICE_USER_SECRET=different_long_jwt_key

# This would be used for session cookies if they were used
SECRET_KEY_BASE=long_secret_key

# Report errors to Rollbar.com.
# Use different access key for API and Frontend.
# Note: Frontend's access key will be PUBLIC so you may not trust all the
#       reports coming from it.
ROLLBAR_ACCESS_TOKEN="rollbar.com"
ROLLBAR_ENV="development"
FRONTEND_ROLLBAR_ACCESS_TOKEN="get this from rollbar.com"
FRONTEND_ROLLBAR_ENVIRONMENT="development"

EMAIL_FROM_ADDRESS=vaalit@hyy.fi
EMAIL_FROM_NAME="Etunimi Sukuniminen"
EXTERNAL_INFO_SITE=http://hyy.fi/hallintovaalit
EXTERNAL_INFO_PHONE="+358 50 551 6147"

# Edarivaalit = only one election at a time
# Halloped    = multiple elections at a time
IS_EDARI_ELECTION=true

# Datetime format must be accepted by Time.parse
ELIGIBILITY_SIGNIN_STARTS_AT="2015-11-02 09:00:00 +0200"
ELIGIBILITY_SIGNIN_ENDS_AT="2015-11-10 09:00:00 +0200"
VOTE_SIGNIN_STARTS_AT="2015-11-02 09:00:00 +0200"
VOTE_SIGNIN_ENDS_AT="2015-11-03 18:00:00 +0200"
# Voters cannot sign in after CLOSING_TIME.
VOTE_SIGNIN_DAILY_CLOSING_TIME="18:30"
# User has GRACE_PERIOD minutes to submit the vote if he signed in before CLOSING_TIME.
VOTING_GRACE_PERIOD_MINUTES=5
# How long after a signed in user is kicked out.
VOTER_SESSION_JWT_EXPIRY_MINUTES=60
# Lifetime of Sign In Token provided after Haka authentication
# (ie. time after user can't re-login from browser history)
SIGN_IN_JWT_EXPIRY_SECONDS=45
# Lifetime of Sign In Token provided in an email link
EMAIL_LINK_JWT_EXPIRY_MINUTES=10

SENDGRID_DOMAIN=hyy.fi
SENDGRID_USERNAME=automatically from heroku addon
SENDGRID_PASSWORD=automatically from heroku addon

## Local example idp
## Ensure you have local idp example running at localhost:4000
# SAML_IDP_SSO_TARGET_URL="http://localhost:4000/saml/auth"
# SAML_IDP_ENTITY_ID="http://localhost:4000/saml/auth"
# SAML_ASSERTION_CONSUMER_SERVICE_URL="http://localhost:3000/haka/auth/consume"
# SAML_MY_ENTITY_ID="http://localhost:3000/"
# SAML_IDP_CERT_FINGERPRINT="9E:65:2E:03:06:8D:80:F2:86:C7:6C:77:A1:D9:14:97:0A:4D:F4:4D"
# HAKA_STUDENT_NUMBER_FIELD="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"

## Haka test environment
SAML_IDP_SSO_TARGET_URL="https://testidp.funet.fi/idp/profile/SAML2/Redirect/SSO"
SAML_IDP_ENTITY_ID="https://testidp.funet.fi/idp/shibboleth"
SAML_ASSERTION_CONSUMER_SERVICE_URL="https://localhost.enemy.fi:3001/haka/sp_session/consume"
SAML_MY_ENTITY_ID="hyy.voting.test.local"
# Fingerprint is not required in Haka-test. Assertions are encrypted so
# a real certificate is used instead.
SAML_IDP_CERT_FINGERPRINT=""

# Copy example certs from `doc/certificate_examples`.
# These may be set in Heroku using
#  `heroku config:set SOME_CERT="$(cat cert.pem)"`
SAML_IDP_CERT="$(cat cert/haka-test-idp.crt)"
SAML_MY_PRIVATE_KEY="$(cat cert/haka-test.key)"
SAML_MY_CERT="$(cat cert/haka-test.crt)"
HAKA_STUDENT_NUMBER_FIELD="urn:oid:1.3.6.1.4.1.25178.1.2.14"

# Frontend: use http://localhost:9000 for development
# - port 9000 is dev environment by `grunt serve`
# - port 3000 is API/public by `rails s`
SITE_ADDRESS=http://localhost:3000/api
SITE_DOMAIN=vaalit.hyy.fi

FRONTEND_API_BASE_URL="http://localhost:3000"
FRONTEND_GOOGLE_ANALYTICS_ID="UA-35625600-1"
